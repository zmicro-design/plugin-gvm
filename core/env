#!/bin/bash

# gvm::env applys the env for go
gvm::env() {
  # echo $PATH | grep $PLUGIN_GVM_GO_BIN >>/dev/null 2>&1
  # if [ $? -ne 0 ]; then
  #   export PATH=$PLUGIN_GVM_GO_BIN:$PATH
  # fi
  export PATH=$PLUGIN_GVM_GO_BIN:$PATH

  # echo "PLUGIN_GVM_GO_BIN: $PLUGIN_GVM_GO_BIN"
  # echo "PATH: $PATH"
  # echo "which go: $(which go)"

  # ls -al /usr/local/go
  # ls -al /usr/local/go/bin

  # go version

  go env -w GO111MODULE=on
  # go env -w GOPROXY=https://goproxy.cn,direct
  go env -w GOPATH=$PLUGIN_GVM_GO_PATH
  #
  go env -w GOPROXY=https://proxy.golang.org,direct
  go env -w GOSUMDB=sum.golang.org

  # Donot set GOBIN, which may cause go install permission into $GOBIN
  # go env -w GOBIN=$GOBIN

  local filenames=(
    .zshrc
    .bashrc
    .bash_profile
    .profile
  )
  for f in ${filenames[@]}; do
    # clean old config
    local profile=$HOME/$f
    if [ -f "$profile" ]; then
      cat $profile | grep "export NODE_HOME=" >>/dev/null 2>&1
      if [ "$?" = "0" ]; then
        fs::remove_line_has_str "$profile" "# ZMICRO_GVM"
        fs::remove_line_has_str "$profile" "export NODE_HOME="
        fs::remove_line_has_str "$profile" "export NODE_USER_HOME="
        fs::remove_line_has_str "$profile" "exportPATH=\$NODE_USER_HOME"
      fi
    fi
  done

  local envs=$(
    cat <<-END
[ -s "\$ZMICRO_HOME/plugins/gvm/source" ] && \. \$ZMICRO_HOME/plugins/gvm/source
END
  )
  config::profile "# ZMICRO_GVM" "$envs"
}

export -f gvm::env
