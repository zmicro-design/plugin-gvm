#!/bin/bash

# gvm::use change the current version of go
gvm::use() {
  local version=$1
  if [ -z "$version" ]; then
    log::error "[gvm::use] version is required"
    return 1
  fi

  if [ "$version" = "default" ]; then
    version=$PLUGIN_GVM_GO_DEFAULT_VERSION
  elif [ "$version" = "lts" ]; then
    version=$PLUGIN_GVM_GO_LTS_VERSION
  elif [ "$version" = "latest" ]; then
    version=$PLUGIN_GVM_GO_DEFAULT_VERSION
  fi

  # smart detect
  version=$(vm::version_ensure_prefix_v $version)

  if [ "$(gvm::has_version_local $version)" = "true" ]; then
    local local_version=$(gvm::get_version_local $version)
    version=$local_version
  else
    # log::error "[gvm::use] version $version not found"
    # exit 1
    log::info "[$(timestamp)] version(${version}) not found, installing ..."
    gvm::install $version

    log::info "[$(timestamp)] use version: ${version}."
    gvm::use $version
    return
  fi

  log::info "[$(timestamp)] use version: ${version} ..."

  # @TODO force sudo
  sudo ls >>/dev/null 2>&1

  if [ -d $PLUGIN_GVM_GO_HOME ]; then
    # if not a link
    if [ "$(os::has_command file)" = "true" ]; then
      file $PLUGIN_GVM_GO_HOME | grep symbolic >>/dev/null 2>&1
      if [ "$?" != "0" ]; then
        sudo rm -rf $PLUGIN_GVM_GO_HOME
      else
        sudo rm -f $PLUGIN_GVM_GO_HOME
      fi
    fi
  fi

  if [ ! -d "/usr/local/bin" ]; then
    sudo mkdir -p /usr/local/bin
  fi

  log::info "[$(timestamp)] create link for version($version) to $PLUGIN_GVM_GO_HOME ..."
  sudo ln -sf $PLUGIN_GVM_VERSIONS/$version $PLUGIN_GVM_GO_HOME
  sudo ln -sf $PLUGIN_GVM_GO_HOME/bin/go /usr/local/bin/go
  echo $version >$PLUGIN_GVM_VERSION_CURRENT

  # apply env
  gvm::env
}

export -f gvm::use
